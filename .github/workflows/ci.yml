name: CI pipeline

on:
  pull_request:
    branches:
      - development  

jobs:
  ci-pipeline:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      # - uses: actions/checkout@v1
      - uses: actions/checkout@v2 # TODO: motivate this!
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis   

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: setup.py

      - name: Install pip
        run: |
          python -m pip install --upgrade pip          

      - name: Install dependencies and project in dev mode
        run: |
          pip install -e ".[local,test]"

      - name: Get the version number
        run: |
          cat databricks_poc_template/__init__.py
          s=$(<databricks_poc_template/__init__.py)
          s=${s#*'"'}; 
          version=${s%'"'*}
          release=v"$version"
          echo $release

      - name: Run pylint code analysis
        run: |
          echo "Launching pylint code analysis"
          make lint 
          cat pylint_report.txt  

#       - name: Run unit tests
#         run: |
#           echo "Launching unit tests"
#           pytest tests/unit







# name: CI pipeline

# on:
#   push:
#     branches:
#       - '**'
#     tags-ignore:
#       - 'v*' # this tag type is used for release pipelines

# jobs:
#   ci-pipeline:

#     runs-on: ubuntu-latest
#     strategy:
#       max-parallel: 4

#     env:
#       DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
#       DATABRICKS_TOKEN:  ${{ secrets.DATABRICKS_TOKEN }}

#     steps:
#       - uses: actions/checkout@v1

#       - name: Set up Python 3.9
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.9'
#           cache: 'pip' # caching pip dependencies
#           cache-dependency-path: setup.py

#       - name: Install pip
#         run: |
#           python -m pip install --upgrade pip

#       - name: Install dependencies and project in dev mode
#         run: |
#           pip install -e ".[local,test]"

#       - name: Run unit tests
#         run: |
#           echo "Launching unit tests"
#           pytest tests/unit

#       - name: Workflow deployment (assets only upload)
#         run: |
#           dbx deploy databricks-poc-template-sample-etl --assets-only

#       - name: Run the workflow in a jobless fashion
#         run: |
#           dbx launch databricks-poc-template-sample-etl --from-assets --trace





